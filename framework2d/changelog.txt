12.10.16
	1 Изменена схема хранения графических данных
	2 Измения в парсере
	
										Переделка физики и исправление графики
12.12.30 
	1 физика
		1.1 добавлена структура-хранилище movement для хранения информации о движении данного тела включая перемещение и вращение
		1.2 при столкновении расчитывается также скорость вращения тела (неправильно, и пока для идеальной шероховатости)
		1.3 длительность такта стала динамической величиной зависящей от момента соударения, соответствующие переделки в StepUp() и т.д.
	2 графика
		2.1 создана специальная структура-движок IO отвечающая за изображение тел и хранящая при себе ссылки на всю графическую информацию по всем телам
		2.2 добавлены отдельные подкатегории в структуре графического элемента для картинки, жестов и надписи
		2.3 добавлено отображение вращающихся тел через rotate и translate канвы
		2.4 графика получила свой отдельный статичный таймер на 40 мс (13.02.06 далее его потеряет)
	3 парсер
		3.1 адаптация к изменениям в физике и графике
	4 окна
		4.1 исправлен файл манифеста. приложение больше не разбито на несколько приложений по количесту окон
		4.2 экран больше не вращается

13.01.29
	1 физика
		1.1 при столкновении расчитывается также скорость вращения тела (наконец то правильно, но пока только для идеальной шероховатости)
		1.2 расчитывается потеря скорости от трения
	2 графика
		2.1 запоминается предыдущее положение тела и по нему рисуется полупрозрачный рисунок для придания движению плавности
		2.2 решена проблема с дерганием изображения
	3 парсер
		3.1 незначительные изменения для подгонки графики
		
											Переделка архитектуры
13.02.06 
	1 движки
		1.1 Описание физического, логического и графического движков перемещены из Вьюва(GameSurface) в отдельные классы
		1.2 Указатели на вышеуказаные движки переместились из Вьюва в хранилище объектов (ObjectStore)
		1.3 Среди свойств движков появились указатели на другие движки
	2 графика
		2.1 Добавлена реакция на жесты 
		2.2 Добавлены указатели на мастер объект классу Жеста (GraphicalMotion->Graphical)
		2.3 Все вычисления связанные с графикой как то прорисовка и реакция на жесты перенесены в функции класса графики
		2.4 Удален собственный таймер. Перерисовка вызывается физическим движком. 
	3 парсер
		3.1 Добавлен класс Equals позволяющий записывать в файле карты целые выражения 
			которые затем вычисляются и результат подставляется в значение объекта
			
13.02.12
	1 парсер
		1.1 Переделан класс для расчета выражений в строке (Expression)
		
												Создание логики
13.02.16 
	1 логика
		1.1 создан класс unit обозначающий одну логическую игровую единицу. Предполагается расширение через интерфейс или абстрактный класс
		1.2 создан класс field как область игрового пространства для проверки покидания игровой единицей пределов какой то области
		1.3 создан класс player обозначающий игрока. на него есть ссылка у юнита (к примеру для чередования ходов) 
		1.4 создан класс phase как разделитель между повторяющимися сессиями как то: ход (до остановки шашки), битва(до потери всех шашек), игра(до полного поражения)
			(фазы принциально меняют суть приложения)
		1.5 создан персональный класс rules обозначающий совокупность правил конкретной игры а не всех возможных игр в целом. 
			Предполагается расширение через интерфейс
		1.6 В логическом движке добавлены функции-выходА класса, к которым можно обратить из других движков, 
			такие как moveto, allObjectsStoped, objectStoped, action
		1.7 подробнее об action: функция к которой обращется ввод/вывод 
			что бы передать информацию логике о жесте выполняемом пользователем (логика определит как его интерпретировать)
	2 физика
		2.1 Когда все тела неподвижны таймер полностью останавливается
		2.2 движок физики получил выводА для обращений от других движков для: 
			остановки тела (stopShape), назначения импулься телу(setImpulse), отключения какого либо тела от просчета (setEnabled) 
	3 графика
		3.1 команда управления от жеста распознаная графикой сначала поступает к логике, затем логика раздает указания физике и графике 
	4 парсер
		4.1 подгонка под логику
		
13.02.23 
	1 логика
		1.1 допиливание введеных ранее классов
		1.2 реализация класса rules делает игру похожей на шашки чапаев. Наконец.
	2 карта
		2.1 объекты в карте теперь двух типов: синглы и прототипы. синглы сразу вносятся в список объектов. прототипы заносятся через респуны 
		2.2 добавлен класс respawn для запоминания точки респауна объекта, строящегося по прототипу
		2.3 изменена структура карты. Внутри фазы помимо других фаз может быть описание объектов и их прототипов, а так же респауны
			Таким образом вся логика игры описывается файлом карты, классом rules и классами построеными на базе unit
			
								Внедрение абстрактных классов, наследования и интерфейсов
13.02.25 
	1 физика
		1.1 классы physical, physicalShape и physicalShapeSphere преобразованы в 
			родителя Shape и потомка ShapeSphere наделив Shape функциями physical и physicalShape через наследование 
	2 логика
		2.1 класс rules стал интерфейсом. Правила конкретной игры (к примеру chapaevRules) - это класс влючающий (implements) интерфейс rules 

13.02.27 
	1 графика
		1.1 классы graphical, graphicalPicture, graphicalMotion и graphicalText преобразованы в 
			родителя graphical и потомков graphicalPicture, graphicalMotion и graphicalText
		1.2 доработаны некоторые функции графики как set и т.д  
	2 архитектура
		2.1 первые шаги начавшиеся с графики к тому что бы заменить единичное представление в логическое/физическое/графическое пространство
			списком независимых элементов этого представления  
	3 парсер
		3.1 создан класс умалчиваемых значений  TagOptions. 
			Хранит уже введные в предыдущих тэгах данные для их повторного использования последующими тэгами 
	 
13.03.02 
	1 физика
		1.1 physical преобразован на манер Graphical и Logical
		1.2 движок переработан и теперь может работать с произвольным физическим представлением, будет дорабатываться
		1.3 к physical добавлен класс area обозначающий область занятую телом за пределы которой оно не выходит. 
			может быть сферой или ось-ориентированным боксом. наследован от точки
		1.4 Movement наследуется от вектора    
	2 архитектура
		2.1 единичное представление в логическое/физическое/графическое пространство заменено списком независимых элементов этого представления
		2.2 Преобразованы вспомогательные классы точки позиции и перемещения для трехмерного представления	 
		
14.06.14
	1 архитектура 
		1.1 функции планировщика перенесены в менеджер движков
		
		
		
16.01.02
	1 архитектура
		1.1 убран верхний уровень представления движка - директ. Статические директ интерфейсы остались, функционал перенесен в Engine 

16.01.25
	1 физика
		1.1 изменен алгоритм расчета сопротивления движению, но он все еще не верный. Исправлен баг делавший зависимым силу замедления от длины такта 